@model  IEnumerable<BRSApplication.Models.BRSRequest>

    <div>
        <button id="btnApprove" class="btn-sm btn-success">Approve</button>
        <button id="btnReject" class="btn-sm btn-danger">Reject</button>
    </div>
<br />
<div id="BRSDataTableGrid" style="height: 215px;" class="ag-theme-balham"></div>


<script>
       let name = "@ViewBag.UserName";
            let role = "@ViewBag.Role";
        var BRSDataAproverTable = [];
     @if (Model != null)
    {
        //Assign Partnumber grid by buyer id
        foreach (var item in Model)
        {
            @:BRSDataAproverTable.push({ RequestedAlias: "@item.RequestedAlias", ExpiryDate: "@item.ExpiryDate",Id:"@item.Id" });
        }
    }
    var BRSDataApproverTableColumnDefs = [
         { headerName: "",  checkboxSelection: true, width: 80 },
                                { headerName: "Requestor", field: "RequestedAlias", width: 150 },
        {
            headerName: "BRS Value", field: "Id", width: 130, cellRenderer: function (params) {
                                        return '<button type="button" id="details"  value='+params.value+' onclick="ShowPopup('+params.value+')" style="background: none; border: none;color: blue;">BRS Value</button>'
                                            } },
                                { headerName: "Expiry Date", field: "ExpiryDate", width: 210 },
                                { headerName: "Status", field: "RequestedAlias", width: 120 },
        {
            headerName: "", field: "Id", width: 240, cellRenderer: function (params) {
                var iddd = params.value;
                if (role == "SuperAdmin") {
                    return '<a href=/BRSRequest/Edit?id=' + params.value + ' style="color: blue;">Edit </a>' + " | " +
                        '<button type="button" id="Delete" value=' + params.value + ' onclick="DeleteBRSValue(' + params.value + ');"  style="background: none; border: none;color: blue;">Delete</button>'
                }
                return "";
                                    //return '<button type="button" id="Edit" value=' + params.value + ' class="btn btn-link"  onclick="location.href=>Edit</button>'+ "|"+
                                           // '<button type="button" id="Delete" value=' + params.value + ' onclick="DeleteBRSValue(' + params.value + ');" class="btn btn-link">Delete</button>'
                                }
            }];

    var GridOptionsBRSDataApproverTable = {
        columnDefs: BRSDataApproverTableColumnDefs,//definition of the column for the grid
        pagination: true,//pagination control at bottom of grid
        paginationPageSize: 20,
        rowData: BRSDataAproverTable,//where the data is coming from, this represents data returned from the stored procedure
        rowSelection: 'multiple',
        enableSorting: true,//sort in grid
        enableFilter: true
        };


       $(document).ready(function () {
             var agARgrid = document.querySelector('#BRSDataTableGrid');
             new agGrid.Grid(agARgrid, GridOptionsBRSDataApproverTable);

            GridOptionsBRSDataApproverTable.api.sizeColumnsToFit();
           });
</script>